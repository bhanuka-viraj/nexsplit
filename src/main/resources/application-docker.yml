# ========================================
# DOCKER APPLICATION CONFIGURATION
# ========================================
# Configuration for running the application in Docker containers
# This profile is automatically activated when running in Docker

spring:
  datasource:
    # Database connection for Docker environment
    url: jdbc:postgresql://postgres:5432/nexsplit
    username: postgres
    password: ${DB_PASSWORD:Viraj@2002}
  jpa:
    hibernate:
      ddl-auto: none # Managed by Flyway
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    locations: classpath:db/migration
    baseline-on-migrate: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:google-client-secret}
            scope: profile,email
            redirect-uri: http://localhost:8080/login/oauth2/code/google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: email

server:
  port: 8080
  # Enable virtual threads for better scalability
  threads:
    virtual: true

jwt:
  secret: ${JWT_SECRET:dev-jwt-secret-key-for-local-development-only}
  access-token:
    expiration-minutes: ${JWT_ACCESS_TOKEN_EXPIRATION:15}
  refresh-token:
    expiration-days: ${JWT_REFRESH_TOKEN_EXPIRATION:7}
    max-family-size: ${JWT_REFRESH_TOKEN_MAX_FAMILY_SIZE:10}
    max-concurrent-sessions: ${JWT_REFRESH_TOKEN_MAX_CONCURRENT_SESSIONS:5}

# ========================================
# ELASTICSEARCH CONFIGURATION
# ========================================
# Configuration for Elasticsearch integration
elasticsearch:
  host: elasticsearch
  port: 9200
  protocol: http
  index-prefix: nexsplit-logs
  environment: docker

# ========================================
# LOGGING CONFIGURATION
# ========================================
logging:
  file:
    # Log file path inside Docker container
    name: /app/logs/nexsplit.log
  pattern:
    # Kibana-friendly log pattern with correlation ID
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"
  level:
    # Application logging - INFO for production
    com.nexsplit: INFO
    # Security logging - WARN for production to reduce noise
    org.springframework.security: WARN
    # Performance logging - DEBUG for monitoring
    com.nexsplit.aspect.LoggingAspect: DEBUG
    # Database logging - WARN for production
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    # Structured logging
    com.nexsplit.util.StructuredLoggingUtil: INFO
    # Elasticsearch logging
    org.elasticsearch: WARN
    org.apache.http: WARN

# ========================================
# EMAIL CONFIGURATION
# ========================================
app:
  email:
    from: ${MAIL_FROM:noreply@nexsplit.com}
    from-name: ${MAIL_FROM_NAME:NexSplit}
    base-url: ${APP_BASE_URL:http://localhost:8080}
  cors:
    # Allow credentials (cookies, authorization headers)
    allow-credentials: true
    # Allowed origins for CORS
    allowed-origins:
      - http://localhost:3000
      - http://127.0.0.1:3000
      - http://localhost:8080
      - http://127.0.0.1:8080
    # Allowed HTTP methods
    allowed-methods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
    # Allowed headers
    allowed-headers:
      - Authorization
      - Origin
      - Content-Type
      - Accept
      - Accept-Encoding
      - Accept-Language
      - Access-Control-Allow-Origin
      - Access-Control-Allow-Headers
      - Access-Control-Request-Method
      - X-Requested-With
      - X-Auth-Token
      - X-Xsrf-Token
      - Cache-Control
      - Id-Token
      - X-Correlation-ID

# ========================================
# SWAGGER/OPENAPI CONFIGURATION
# ========================================
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    display-operation-id: true
    custom-css: |
      .swagger-ui .auth-wrapper {
        margin: 20px 0;
      }
      .swagger-ui .auth-container {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        padding: 15px;
      }
    custom-js: |
      window.onload = function() {
        setTimeout(function() {
          const authBtn = document.querySelector('.auth-wrapper .btn.authorize');
          if (authBtn) {
            authBtn.style.backgroundColor = '#007bff';
            authBtn.style.color = 'white';
          }
        }, 1000);
      };
  default-produces-media-type: application/json
  default-consumes-media-type: application/json
